- name: create a database for shibboleth-idp
  community.mysql.mysql_db:
    name: "{{ database_name }}"
    state: present
    encoding: utf8
    check_implicit_admin: true
    login_host: "{{ database_host }}"
    login_user: "{{ database_admin }}"
    login_password: "{{ database_admin_password }}"
  no_log: true
  when: create_remote_db

- name: create a database user for shibboleth-idp
  mysql_user:
    name: "{{ database_user }}"
    state: present
    password: "{{ database_password }}"
    priv: "{{ database_name }}.*:ALL"
    check_implicit_admin: true
    login_host: "{{ database_host }}"
    login_user: "{{ database_admin }}"
    login_password: "{{ database_admin_password }}"
  no_log: true
  when: create_remote_db

- name: Check if Database exists / is reachable
  community.mysql.mysql_db:
    name: "{{ database_name }}"
    login_host: "{{ database_host }}"
    login_user: "{{ database_user }}"
    login_password: "{{ database_password }}"
    state: present
    register: database_exists

- name: Example using fail and when together
  ansible.builtin.fail:
    msg: Check if your external Database is created, reachable and user have rights for it!
  when: database_exists is undefined

- name: get mysqldumps for two database tables
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /tmp
    owner: root
    group: root
    mode: 0644
  with_fileglob:
    - "files/*.sql"

- name: import both tables to database
  mysql_db:
    name: "{{ database_name }}"
    state: import
    target: "{{ item }}"
    login_host: "{{ database_host }}"
    login_user: "{{ database_user }}"
    login_password: "{{ database_password }}"
  loop:
    - /tmp/table-shibpid.sql
    - /tmp/table-storage-records.sql
  # import is not idempotent and thus may fail
  ignore_errors: true
  no_log: true