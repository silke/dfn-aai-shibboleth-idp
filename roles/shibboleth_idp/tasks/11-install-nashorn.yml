---
- name: install the nashorn plugin
  block:

    - name: check if the nashorn plugin is installed
      ansible.builtin.shell: "/opt/shibboleth-idp/bin/plugin.sh -l | grep '^Plugin: net.shibboleth.idp.plugin.nashorn'"
      register: idp_nashorn_plugin_status
      failed_when: idp_nashorn_plugin_status.rc != 0

    - name: debug
      debug:
        msg: idp_nashorn_plugin_status.rc

  rescue:

  # Download the nashorn plugin version number given in group_vars/idphosts/vars
  - name: download the latest nashorn plugin
    ansible.builtin.get_url:
      url: "{{ item }}"
      dest: /opt/install
      force: false
    loop:
      - "{{ nashorn_plugin_archive_url }}"
      - "{{ nashorn_plugin_signature_url }}"
      - "{{ idp_keys_url }}"

  - name: import the PGP key
    ansible.builtin.command: gpg --import PGP_KEYS
    args:
      chdir: /opt/install
    register: import_pgp_keys
    changed_when: "'imported:' in import_pgp_keys.stdout"

  - name: verify the download
    ansible.builtin.command: >
      gpg
      --verify
      idp-plugin-nashorn-jdk-dist-{{ nashorn_plugin_version }}.tar.gz.asc
      idp-plugin-nashorn-jdk-dist-{{ nashorn_plugin_version }}.tar.gz
    args:
      chdir: /opt/install
    register: verified_nashorn_plugin_download
    changed_when: false

  - name: extract the archive if verified
    ansible.builtin.unarchive:
      src: "{{
        '/opt/install/idp-plugin-nashorn-jdk-dist-' +
        nashorn_plugin_version +
        '.tar.gz'
      }}"
      dest: /opt/install
      remote_src: true
    when: verified_nashorn_plugin_download is succeeded

  - name: install the nashorn plugin
    ansible.builtin.shell: "/opt/shibboleth-idp/bin/plugin.sh --truststore /opt/install/PGP_KEYS -i idp-plugin-nashorn-jdk-dist-{{ nashorn_plugin_version }}.tar.gz"
    args:
      chdir: /opt/install
    register: idp_nashorn_plugin_installed