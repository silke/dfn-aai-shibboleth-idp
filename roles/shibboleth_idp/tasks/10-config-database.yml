- ansible.builtin.import_tasks: 10-01-install-database-server.yml
  tags: install-database-server
  when: idp_local_db

- ansible.builtin.import_tasks: 10-02-use-external-database.yml
  tags: install-database-dependecies
  when: not idp_local_db

- name: install mariadb-dependecies
  ansible.builtin.apt:
    name: ['mariadb-client', 'libmariadb-java', 'python3-pymysql']
    state: present

- name: create symlink for tomcat
  ansible.builtin.file:
    src: /usr/share/java/mariadb-java-client.jar
    dest: /var/lib/tomcat9/lib/mariadb-java-client.jar
    state: link
  notify: restart tomcat

- name: configure database access via JPAStorageService
  ansible.builtin.blockinfile:
    path: /opt/shibboleth-idp/conf/global.xml
    block: |
      <bean id="shibboleth.MySQLDataSource"
          class="%{mysql.class}"
          p:driverClassName="org.mariadb.jdbc.Driver"
          p:url="%{mysql.url}"
          p:username="%{mysql.username}"
          p:password="%{mysql.password}"
          p:maxWait="15000"
          p:testOnBorrow="true"
          p:maxActive="100"
          p:maxIdle="100"
          p:validationQuery="select 1"
          p:validationQueryTimeout="5" />
      <bean id="shibboleth.JPAStorageService"
          class="org.opensaml.storage.impl.JPAStorageService"
          p:cleanupInterval="%{idp.storage.cleanupInterval:PT10M}"
          c:factory-ref="shibboleth.JPAStorageService.EntityManagerFactory" />
      <bean id="shibboleth.JPAStorageService.EntityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
          <property name="packagesToScan" value="org.opensaml.storage.impl"/>
          <property name="dataSource" ref="shibboleth.MySQLDataSource"/>
          <property name="jpaVendorAdapter" ref="shibboleth.JPAStorageService.JPAVendorAdapter"/>
          <property name="jpaDialect">
              <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
          </property>
      </bean>
      <bean id="shibboleth.JPAStorageService.JPAVendorAdapter"
          class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
          p:generateDdl="true"
          p:database="MYSQL"
          p:databasePlatform="org.hibernate.dialect.MySQL5Dialect" />
    insertbefore: </beans>
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
  notify: restart tomcat

- name: add database credentials to idp.properties
  ansible.builtin.blockinfile:
    path: /opt/shibboleth-idp/conf/idp.properties
    block: |
      mysql.class    = org.apache.tomcat.jdbc.pool.DataSource
      mysql.url      = jdbc:mysql://{{ database_host }}:3306/{{ database_name }}
      mysql.username = {{ database_user }}
    insertbefore: EOF

- name: add database password to secrets.properties
  ansible.builtin.lineinfile:
    path: /opt/shibboleth-idp/credentials/secrets.properties
    regexp: "^mysql.password"
    line: mysql.password = {{ database_password }}
  no_log: true
